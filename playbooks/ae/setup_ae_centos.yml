# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
#Import playbook

- hosts: all
  gather_facts: no
  vars:
    USER_HOME: "/home/centos"
    CMAKE_DIR: "{{ USER_HOME }}/cmake-3.5.2"
    WIRESHARK_DIR: "{{ USER_HOME }}/wireshark-3.2.6"
    PYTHON_DIR: "{{ USER_HOME }}/Python-3.8.5"
  tasks:
    - name: Uninstall python3-pip & python-pip
      become: yes
      yum:
        name:
          - python3-pip
          - python-pip
        state: absent

    - name: Install yum dependencies
      become: yes
      yum:
        name:
          - tcpdump
          - vim
          - wget
          - unzip
          - java-1.8.0-openjdk-devel
          - git
          - gcc
          - gcc-c++
          - bison
          - flex
          - libpcap-devel
          - qt-devel
          - gtk3-devel
          - rpm-build
          - libtool
          - c-ares-devel
          - qt5-qtbase-devel
          - qt5-qtmultimedia-devel
          - qt5-linguist
          - desktop-file-utils
          - openssl-devel
          - bzip2-devel
          - libffi-devel
          - libgcrypt-devel
          - ncurses-devel

    - name: Get Wireshark v3.2.6 tar
      get_url:
          url: https://www.wireshark.org/download/src/all-versions/wireshark-3.2.6.tar.xz
          dest: "{{ USER_HOME }}"

    - name: Create directory for Wireshark
      file:
        path: "{{ WIRESHARK_DIR }}"
        state: directory

    - name: Extract Wireshark
      unarchive:
        src: "{{ USER_HOME }}/wireshark-3.2.6.tar.xz"
        dest: "{{ USER_HOME }}"
        remote_src: yes

    - name: Run rpm-setup script in Wireshark repository to install unmet dependencies
      become: yes
      command: "{{ WIRESHARK_DIR }}/tools/rpm-setup.sh -y"

    - name: Retrieve cmake tarball
      get_url:
        url: https://cmake.org/files/v3.5/cmake-3.5.2.tar.gz
        dest: "{{ USER_HOME }}"

    - name: Create directory for cmake
      file:
        path: "{{ CMAKE_DIR }}"
        state: directory

    - name: Extract cmake
      unarchive:
        src: "{{ USER_HOME }}/cmake-3.5.2.tar.gz"
        dest: "{{ USER_HOME }}"
        remote_src: yes

    - name: Bootstrap prefix usr before executing make for cmake
      command: ./bootstrap --prefix=/usr
      args:
        chdir: "{{ CMAKE_DIR }}"

    - name: Run cmake make install
      become: yes
      command: make -j4 install
      args:
        chdir: "{{ CMAKE_DIR }}"

    - name: Verify cmake installed
      command: cmake --version
      register: cmake_out
      args:
        chdir: "{{ CMAKE_DIR }}"

    - name: Fail when cmake version is incorrect
      fail:
        msg: "cmake version is incorrect {{ cmake_out }}"
      when: cmake_out.stdout is not search('3.5.2')

    - name: Create build directory for Wireshark installation
      file:
        path: "{{ WIRESHARK_DIR }}/build"
        state: directory

    - name: Run CMAKE command for Wireshark installation
      command: "cmake {{ WIRESHARK_DIR }}"
      args:
        chdir: "{{ WIRESHARK_DIR }}/build"

    - name: Run make Wireshark
      command: make -j4
      args:
        chdir: "{{ WIRESHARK_DIR }}/build"

    - name: Install Wireshark
      become: yes
      command: make -j4 install
      args:
        chdir: "{{ WIRESHARK_DIR }}/build"

    - name: Download and install a specific version of Python v3.8.5
      get_url:
        url: https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz
        dest: "{{ USER_HOME }}"

    - name: Create directory for Python
      file:
        path: "{{ PYTHON_DIR }}"
        state: directory

    - name: Extract Python-3.8.5
      unarchive:
        src: "{{ USER_HOME }}/Python-3.8.5.tgz"
        dest: "{{ USER_HOME }}"
        remote_src: yes

    - name: Configure Python optimizations for Python 3.8 install
      command: ./configure --enable-optimizations
      args:
        chdir: "{{ PYTHON_DIR }}"

    - name: Run INSTALL command for python 3.8 installation
      become: yes
      command: make -j4 altinstall
      args:
        chdir: "{{ PYTHON_DIR }}"

    - name: Remove previously existing python3 configuration
      become: yes
      file:
        path: /usr/bin/python3
        state: absent

    - name: Reset Python3 version to Python3.8 installation
      become: yes
      shell: ln -s /usr/local/bin/python3.8 /usr/bin/python3

    - name: Get repo OpenDistro Elasticsearch via RPM package
      become: yes
      get_url:
        url: https://d3g5vo6xdbdb9a.cloudfront.net/yum/opendistroforelasticsearch-artifacts.repo
        dest: /etc/yum.repos.d

    - name: Install OpenDistro Elasticsearch
      become: yes
      yum:
        name: opendistroforelasticsearch-1.11.0-1

    - name: Remove link for OpenDistro Elasticsearch installation
      become: yes
      file:
        path: /usr/share/elasticsearch/lib/tools.jar
        state: absent

    - name: Add link for OpenDistro Elasticsearch installation
      become: yes
      command: ln -s /usr/lib/jvm/java-1.8.0/lib/tools.jar /usr/share/elasticsearch/lib/tools.jar

    - name: Remove opendistro_security plugin for current OpenDistro Elasticsearch installation
      become: yes
      command: /usr/share/elasticsearch/bin/elasticsearch-plugin remove opendistro_security

    - name: Update OpenDistro Elasticsearch config file to disable security
      become: yes
      copy:
        src: ./templates/opendistro_elasticsearch.sh
        dest: /etc/elasticsearch/elasticsearch.yml
        force: yes

    - name: Install OpenDistro Kibana
      become: yes
      yum:
        name: opendistroforelasticsearch-kibana

    - name: Remove opendistro_security plugin for current OpenDistro Kibana installation
      become: yes
      command: /usr/share/kibana/bin/kibana-plugin remove opendistro_security --allow-root

    - name: Update OpenDistro Kibana config file
      become: yes
      copy:
        src: ./templates/opendistro_kibana.sh
        dest: /etc/kibana/kibana.yml
        force: yes

    - name: Get Espcap repository
      git:
        repo: https://github.com/vichargrave/espcap
        dest: "{{ USER_HOME }}/espcap"

    - name: Install requirements for Espcap Elasticsearch v7.x
      become: yes
      command: "pip3 install -r {{ USER_HOME }}/espcap/requirements-7.x.txt"

    - name: Copy TPS requirements.txt
      copy:
        src: ../../requirements.txt
        dest: "{{ USER_HOME }}/tps-py-requirements.txt"

    - name: Install TPS Python requirements
      become: yes
      command: "pip3 install -r {{ USER_HOME }}/tps-py-requirements.txt"
