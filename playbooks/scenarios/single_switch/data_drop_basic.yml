# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Add table entry to "{{ data_forward_table }}"
- import_playbook: ../test_cases/write_to_p4_table.yml
  vars:
    int_hops: "{{ sr_rec_int_hops | default(0) }}"
    te_conf_file: "df-write-data-forward-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}.yml"
    p4_table_action: "{{ data_forward_table_action }}"
    p4_te_log_dir: "{{ host_log_dir }}"
    p4_te_log_file: "df-write-data-forward-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}.log"
    execute_insert: "{{ write_data_forward | default(False) }}"

# Sending UDP packets expect all to be received
- import_playbook: ../test_cases/send_receive.yml
  vars:
    int_hops: "{{ sr1_rec_int_hops | default(0) }}"
    receiver_log_filename: "dd_basic_receiver-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    sender_log_filename: "dd_basic_sender-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    send_port: "{{ send_port }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 1) }}"
    send_packet_count: "{{ '%s' % 100 | random(seed=now|int + 2) }}"
    inspection_data: "{{ sr1_data_inspection_int | default(None) }}"
    max_received_packet_count: "{{ send_packet_count }}"

# Add table entry to {{ data_drop_table }}
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: Start mitigation with body {{ start_attack.body }} to {{ start_attack.url }}
      uri:
        url: "{{ start_attack.url }}"
        method: "{{ start_attack.method }}"
        body_format: "{{ start_attack.body_format | default('json') }}"
        body: "{{ start_attack.body }}"
        status_code: "{{ start_attack.ok_status | default('200') }}"

# Sending UDP packets expect none to be received
- import_playbook: ../test_cases/send_receive.yml
  vars:
    int_hops: "{{ sr2_rec_int_hops | default(0) }}"
    receiver_log_filename: "dd_basic_receiver-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-2.out"
    sender_log_filename: "dd_basic_sender-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-2.out"
    send_port: "{{ send_port }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 3) }}"
    send_packet_count: "{{ '%s' % 100 | random(seed=now|int + 4) }}"
    inspection_data: "{{ sr2_data_inspection_int | default(None) }}"
    min_received_packet_count: 0
    max_received_packet_count: 0

# Delete table entry from table {{ data_drop_table }}
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: Stop mitigation with body {{ stop_attack.body }} to {{ stop_attack.url }}
      uri:
        url: "{{ stop_attack.url }}"
        method: "{{ stop_attack.method }}"
        body_format: "{{ stop_attack.body_format | default('json') }}"
        body: "{{ stop_attack.body }}"
        status_code: "{{ stop_attack.ok_status | default('200') }}"

# Sending UDP packets expect all to be received
- import_playbook: ../test_cases/send_receive.yml
  vars:
    int_hops: "{{ sr3_rec_int_hops | default(0) }}"
    receiver_log_filename: "dd_basic_receiver-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-3.out"
    sender_log_filename: "dd_basic_sender-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-3.out"
    send_port: "{{ send_port }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 5) }}"
    send_packet_count: "{{ '%s' % 100 | random(seed=now|int + 6) }}"
    inspection_data: "{{ sr3_data_inspection_int | default(None) }}"
    max_received_packet_count: "{{ send_packet_count }}"

# Delete table entry from "{{ data_forward_table }}"
- import_playbook: ../test_cases/write_to_p4_table.yml
  vars:
    int_hops: "{{ sr_rec_int_hops | default(0) }}"
    te_conf_file: "df-write-data-forward-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}.yml"
    p4_table_action: "{{ data_forward_table_action }}"
    p4_te_log_dir: "{{ host_log_dir }}"
    p4_te_log_file: "df-write-data-forward-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}.log"
    p4_te_insert: False
    execute_insert: "{{ write_data_forward | default(False) }}"
