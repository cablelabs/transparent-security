# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# TODO - Figure out why sample rate for telemetry reports has not been very stable running on the model
# Call POST on all WS calls
#- hosts: controller
#  gather_facts: no
#  tasks:
#    - name: Set sampling rate to {{ sample_rate }}
#      uri:
#        url: "http://{{ sdn_ip }}:{{ sdn_port }}/telemRptSample"
#        method: POST
#        body_format: json
#        body:
#          sample: "{{ sample_rate }}"
#        status_code: 201
#      when: sample_rate is defined

# Sending packets expect all to be received with configured INT hops sr1_rec_int_hops
- import_playbook: ../test_cases/send_receive.yml
  vars:
    int_hops: "{{ sr1_rec_int_hops | default(0) }}"
    receiver_log_filename: "{{ di_log_prfx | default('di') }}_basic_receiver-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    sender_log_filename: "{{ di_log_prfx | default('di') }}_basic_sender-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    send_port: "{{ di_send_port }}"
    send_src_port: "{{ di_src_port }}"
    send_packet_count: "{{ di_send_packet_count | default('%s' % 100 | random(seed=now|int + 11)) }}"
    min_received_packet_count: "{{ di_min_rec_packet_count | default(send_packet_count | int) }}"
    max_received_packet_count: "{{ di_send_packet_count | default(send_packet_count | int ) }}"
    inspection_data: "{{ sr1_data_inspection_int | default(None) }}"
    send_loops: "{{ di_send_loops | default(1) }}"
    send_loop_delay: "{{ di_send_loop_delay | default(0) }}"

- hosts: controller
  gather_facts: no
  vars:
    call_ws: "{{ stop_attack | default(true) }}"
  tasks:
    - name: Stop any potential attack that may have been issued
      uri:
        url: "http://{{ sdn_ip }}:{{ sdn_port }}/aggAttack"
        body:
          event:
            src_mac: "{{ sender.mac }}"
            dst_ip: "{% if ip_version|int == 4 %}{{ receiver.ip }}{% else %}{{ receiver.ipv6 }}{% endif %}"
            dst_port: "{{ di_send_port }}"
        headers:
          Content-Type: "application/json"
        method: DELETE
        body_format: json
        status_code: 201
      when: call_ws|bool
