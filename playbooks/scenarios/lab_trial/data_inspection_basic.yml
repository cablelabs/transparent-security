# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Add table entry to data_inspection_t table on aggregate switch
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: Insert data inspection table entry via endpoint {{ data_inspection_hop1.url }}
      uri:
        url: "{{ data_inspection_hop1.url }}"
        method: POST
        body_format: "{{ data_inspection_hop1.body_format | default('json') }}"
        body: "{{ data_inspection_hop1.body }}"
        status_code: "{{ data_inspection_hop1.ok_status | default('200') }}"

# Add table entry to data_inspection_t table on core switch
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: Insert data inspection table entry via endpoint {{ data_inspection_hop2.url }}
      uri:
        url: "{{ data_inspection_hop2.url }}"
        method: POST
        body_format: "{{ data_inspection_hop2.body_format | default('json') }}"
        body: "{{ data_inspection_hop2.body }}"
        status_code: "{{ data_inspection_hop2.ok_status | default('200') }}"

# TODO/FIXME - Gateway TCP scenario receives 2x packets
# Sending UDP packets expect all to be received with configured INT hops sr1_rec_int_hops
- import_playbook: ../test_cases/send_receive.yml
  vars:
    int_hops: "{{ sr1_rec_int_hops | default(0) }}"
    receiver_log_filename: "di_basic_receiver-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    sender_log_filename: "di_basic_sender-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    send_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 9) }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 10) }}"
    send_packet_count: "{{ '%s' % 100 | random(seed=now|int + 11) }}"
    inspection_data: "{{ sr1_data_inspection_int | default(None) }}"
    max_received_packet_count: "{{ send_packet_count }}"
    discover_fwd_path: True

# Delete table entry from data_inspection_t table on aggregate switch
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: Insert data inspection table entry via endpoint {{ data_inspection_hop1.url }}
      uri:
        url: "{{ data_inspection_hop1.url }}"
        method: DELETE
        body_format: "{{ data_inspection_hop1.body_format | default('json') }}"
        body: "{{ data_inspection_hop1.body }}"
        status_code: "{{ data_inspection_hop1.ok_status | default('200') }}"

# Delete table entry from data_inspection_t table on core switch
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: Insert data inspection table entry via endpoint {{ data_inspection_hop2.url }}
      uri:
        url: "{{ data_inspection_hop2.url }}"
        method: DELETE
        body_format: "{{ data_inspection_hop2.body_format | default('json') }}"
        body: "{{ data_inspection_hop2.body }}"
        status_code: "{{ data_inspection_hop2.ok_status | default('200') }}"
