# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Restart AE service to ensure moving window gets reset
- hosts: ae
  gather_facts: no
  become: yes
  tasks:
    - name: Restart tps-tofino-ae
      systemd:
        name: tps-tofino-ae
        state: restarted

# Add table entries into data_forward_t tables
- hosts: "{{ rec_host }}"
  gather_facts: no
  vars:
    execute_insert: "{{ write_data_forward | default(False) }}"
  tasks:
    - block:
        - name: Data forward structure
          debug:
            var: data_forwards
        - name: Insert data forward table
          uri:
            url: "{{ item.url }}"
            method: POST
            body_format: "{{ item.body_format | default('json') }}"
            body: "{{ item.body }}"
            status_code: "{{ item.ok_status | default('200') }}"
          with_items: "{{ data_forwards }}"
      when: execute_insert|bool

# Enable switches for data inspection
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: show data inspection requests for enablement
      debug:
        var: data_inspections

    - name: Data inspection requests
      uri:
        url: "{{ item.url }}"
        method: POST
        body_format: "{{ item.body_format | default('json') }}"
        body: "{{ item.body }}"
        status_code: "{{ item.ok_status | default('200') }}"
      with_items: "{{ data_inspections }}"

# Sending packets expect all to be received with configured INT hops sr1_rec_int_hops
- import_playbook: ../test_cases/send_receive.yml
  vars:
    int_hops: "{{ sr1_rec_int_hops | default(0) }}"
    receiver_log_filename: "{{ di_log_prfx | default('di') }}_basic_receiver-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    sender_log_filename: "{{ di_log_prfx | default('di') }}_basic_sender-{{ send_protocol }}-ip-{{ ip_version }}-ih-{{ int_hops }}-1.out"
    send_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 9) }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 10) }}"
    send_packet_count: "{{ di_send_packet_count | default('%s' % 100 | random(seed=now|int + 11)) }}"
    inspection_data: "{{ sr1_data_inspection_int | default(None) }}"
    min_received_packet_count: "{{ di_min_rec_packet_count | default(send_packet_count) }}"
    max_received_packet_count: "{{ di_max_rec_packet_count | default(send_packet_count) }}"
    send_loops: "{{ di_send_loops | default(1) }}"
    send_loop_delay: "{{ di_send_loop_delay | default(5) }}"
    discover_fwd_path: True
    cleanup_rest_call:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/aggAttack"
      body:
        src_mac: "{{ sender.mac }}"
        dst_ip: "{% if scenario_send_ip_version|int == 4 %}{{ receiver.ip }}{% else %}{{ receiver.ipv6 }}{% endif %}"
        dst_port: "{{ send_port }}"
      ok_status: 201

# Disable switches for data inspection
- hosts: "{{ rec_host }}"
  gather_facts: no
  tasks:
    - name: Data inspection requests
      uri:
        url: "{{ item.url }}"
        method: DELETE
        body_format: "{{ item.body_format | default('json') }}"
        body: "{{ item.body }}"
        status_code: "{{ item.ok_status | default('200') }}"
      with_items: "{{ data_inspections }}"

# Delete table entries from data_forward_t tables
- hosts: "{{ rec_host }}"
  gather_facts: no
  vars:
    execute_insert: "{{ write_data_forward | default(False) }}"
  tasks:
    - name: Delete data forward table
      uri:
        url: "{{ item.url }}"
        method: DELETE
        body_format: "{{ item.body_format | default('json') }}"
        body: "{{ item.body }}"
        status_code: "{{ item.ok_status | default('200') }}"
      with_items: "{{ data_forwards }}"
      when: execute_insert|bool
