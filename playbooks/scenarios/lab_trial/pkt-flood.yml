# Copyright (c) 2020 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Basic Data Inspection scenario - receiving packets on inet host
- import_playbook: data_inspection_basic.yml
  vars:
    di_log_prfx: pkt-flood-1
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    di_send_packet_count: 300
    di_min_rec_packet_count: 99
    di_send_loops: 2
    di_send_loop_delay: 65
    arp_discovery: True
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch: "{{ topo_dict.switches.aggregate }}"
    switch2: "{{ topo_dict.switches.core }}"
    send_host: host1
    rec_host: inet
    sender: "{{ topo_dict.hosts[send_host] }}"
    receiver: "{{ topo_dict.hosts[rec_host] }}"
    sender_intf_name: "{{ sender.intf_name }}"
    rec_intf_name: "{{ receiver.intf_name }}"
    dst_mac: "{{ receiver['mac'] }}"
    expected_rate: 0
    cleanup_rest_call:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/aggAttack"
      body:
        src_mac: "{{ sender.mac }}"
        dst_ip: "{% if scenario_send_ip_version|int == 4 %}{{ receiver.ip }}{% else %}{{ receiver.ipv6 }}{% endif %}"
        dst_port: "{{ send_port }}"
      ok_status: 201

# Start packet mitigation
- hosts: controller
  gather_facts: no
  vars:
    wait_time: "{{ release_wait | default(0) }}"
  tasks:
    - name: Wait {{ wait_time }} seconds to un-mitigate
      pause:
        seconds: "{{ wait_time }}"

- import_playbook: data_inspection_basic.yml
  vars:
    di_log_prfx: pkt-flood-2
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    di_send_packet_count: 300
    di_min_rec_packet_count: 99
    di_send_loops: 2
    di_send_loop_delay: 65
    arp_discovery: True
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch: "{{ topo_dict.switches.aggregate }}"
    switch2: "{{ topo_dict.switches.core }}"
    send_host: host1
    rec_host: inet
    sender: "{{ topo_dict.hosts[send_host] }}"
    receiver: "{{ topo_dict.hosts[rec_host] }}"
    sender_intf_name: "{{ sender.intf_name }}"
    rec_intf_name: "{{ receiver.intf_name }}"
    dst_mac: "{{ receiver['mac'] }}"
    expected_rate: 0
    cleanup_rest_call:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/aggAttack"
      body:
        src_mac: "{{ sender.mac }}"
        dst_ip: "{% if scenario_send_ip_version|int == 4 %}{{ receiver.ip }}{% else %}{{ receiver.ipv6 }}{% endif %}"
        dst_port: "{{ send_port }}"
      ok_status: 201
