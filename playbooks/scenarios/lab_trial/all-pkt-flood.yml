# Copyright (c) 2020 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Start AE service
- hosts: ae
  gather_facts: no
  tasks:
    - name: Start tps-tofino-ae service
      become: yes
      systemd:
        name: tps-tofino-ae
        state: started

    - name: Wait for K8s deployment/trpt-to-kafka-0 to become available
      command: kubectl wait --for=condition=available --timeout=600s deployment/trpt-to-kafka-0 -n default
      register: trpt_to_kafka_check
      retries: 10
      delay: 20
      until: trpt_to_kafka_check is not failed

    - name: Wait for K8s deployment/kafka-trpt-ddos-detect-0 to become available
      command: kubectl wait --for=condition=available --timeout=600s deployment/kafka-trpt-ddos-detect-0 -n default
      register: ddos_check
      retries: 5
      delay: 10
      until: ddos_check is not failed

    - name: Wait for K8s deployment/kafka-trpt-drop-clear-0 to become available
      command: kubectl wait --for=condition=available --timeout=600s deployment/kafka-trpt-drop-clear-0 -n default
      register: drop_check
      retries: 5
      delay: 10
      until: drop_check is not failed

# Packet Flood scenarios for UDP and IPv4
- import_playbook: pkt-flood.yml
  vars:
    scenario_send_protocol: UDP
    scenario_send_ip_version: 4
    di_send_port: 1234
    di_src_port: 2345

# Packet Flood scenarios for TCP and IPv4
- import_playbook: pkt-flood.yml
  vars:
    scenario_send_protocol: TCP
    scenario_send_ip_version: 4
    di_send_port: 3456
    di_src_port: 5678

# Packet Flood scenarios for UDP and IPv6
- import_playbook: pkt-flood.yml
  vars:
    scenario_send_protocol: UDP
    scenario_send_ip_version: 6
    di_send_port: 1234
    di_src_port: 2345

# Packet Flood scenarios for TCP and IPv6
- import_playbook: pkt-flood.yml
  vars:
    scenario_send_protocol: TCP
    scenario_send_ip_version: 6
    di_send_port: 3456
    di_src_port: 5678
