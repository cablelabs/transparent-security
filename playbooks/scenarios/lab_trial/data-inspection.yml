# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---

# Basic Data Inspection scenario - receiving packets on core-eth2 (non-INT packets)
- import_playbook: data_inspection_basic.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    first_hop_switch: "{{ topo_dict.switches.aggregate }}"
    second_hop_switch: "{{ topo_dict.switches.core }}"
    remote_send_host: host1
    remote_rec_host: inet
    send_host: "{{ remote_send_host }}"
    rec_host: "{{ remote_rec_host }}"
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    receiver: "{{ topo_dict.hosts[remote_rec_host] }}"
    dst_mac: "{{ receiver['mac'] }}"
    data_inspection_table_action_hop1:
      control_name: TpsAggIngress
      table_name: data_inspection_t
      action:
        name: "{{ 'data_inspect_packet' }}"
        match_fields:
          - key: hdr.ethernet.src_mac
            value: "{{ sender.mac }}"
          - key: hdr.ethernet.etherType
            value: "{{ '0x0800' if ip_version == '4' else '0x86dd' }}"
        params:
          - key: device
            value: "{{ sender.id }}"
          - key: switch_id
            value: "{{ switch.id }}"
    data_inspection_table_action_hop2:
      control_name: TpsCoreIngress
      table_name: data_inspection_t
      action:
        name: "{{ 'data_inspect_packet' }}"
        match_fields:
          - key: hdr.udp_int.dst_port
            value: 555
        params:
          - key: switch_id
            value: "{{ switch.id }}"
    sr1_rec_int_hops: 0

# Basic Data Inspection scenario - receiving packets on core-eth3 (INT packets)
- import_playbook: data_inspection_basic.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    first_hop_switch: "{{ topo_dict.switches.aggregate }}"
    second_hop_switch: "{{ topo_dict.switches.core }}"
    remote_send_host: host1
    remote_rec_host: ae
    send_host: "{{ remote_send_host }}"
    rec_host: "{{ remote_rec_host }}"
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    receiver: "{{ topo_dict.hosts.inet }}"
    dst_mac: "{{ receiver['mac'] }}"
    data_inspection_table_action_hop1:
      control_name: TpsAggIngress
      table_name: data_inspection_t
      action:
        name: "{{ 'data_inspect_packet' }}"
        match_fields:
          - key: hdr.ethernet.src_mac
            value: "{{ sender.mac }}"
          - key: hdr.ethernet.etherType
            value: "{{ '0x0800' if ip_version == '4' else '0x86dd' }}"
        params:
          - key: device
            value: "{{ sender.id }}"
          - key: switch_id
            value: "{{ switch.id }}"
    data_inspection_table_action_hop2:
      control_name: TpsCoreIngress
      table_name: data_inspection_t
      action:
        name: "{{ 'data_inspect_packet' }}"
        match_fields:
          - key: hdr.udp_int.dst_port
            value: 555
        params:
          - key: switch_id
            value: "{{ switch.id }}"
    sr1_rec_int_hops: 2
