# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---

# Basic Data Drop scenario
- import_playbook: ../single_switch/data_drop_basic.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch: "{{ topo_dict.switches.gateway }}"
    remote_send_host: host1
    remote_rec_host: host2
    send_host: "{{ remote_send_host if run_mode == 'remote' else None }}"
    rec_host: "{{ remote_rec_host if run_mode == 'remote' else None }}"
    send_port: 4321
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    sender_intf: "{{ '%s-eth0' % send_host if run_mode == 'remote' else '%s-eth1' % switch.name }}"
    send_sw_port: "{{ topo_dict.links[0].south_facing_port }}"
    receiver: "{{ topo_dict.hosts[remote_rec_host] }}"
    receiver_intf: "{{ '%s-eth0' % rec_host if run_mode == 'remote' else '%s-eth2' % switch.name }}"
    rec_sw_port: "{{ topo_dict.links[1].north_facing_port }}"
    data_forward_table_action:
      control_name: TpsGwIngress
      table_name: data_forward_t
      action:
        name: data_forward
        match_fields:
          - key: standard_metadata.ingress_port
            value: "{{ send_sw_port }}"
        params:
          - key: dstAddr
            value: "{{ switch.mac }}"
          - key: port
            value: "{{ rec_sw_port }}"
          - key: l2ptr
            value: 0
    data_drop_table_action:
      control_name: TpsGwIngress
      table_name: "{{ 'data_drop_udp_ipv%s_t' % ip_version if send_protocol == 'UDP' else 'data_drop_tcp_ipv%s_t' % ip_version }}"
      action:
        name: data_drop
        match_fields:
          - key: hdr.ethernet.src_mac
            value: "{{ sender.mac }}"
          - key: "{{ 'hdr.ipv%s.srcAddr' % ip_version }}"
            value: "{{ sender.ip  if ip_version == '4' else sender.ipv6 }}"
          - key: "{{ 'hdr.ipv%s.dstAddr' % ip_version }}"
            value: "{{ receiver.ip if ip_version == '4' else receiver.ipv6 }}"
          - key: "{{ 'hdr.udp.dst_port' if send_protocol == 'UDP' else 'hdr.tcp.dst_port' }}"
            value: "{{ send_port }}"
        params:
          - key: device
            value: "{{ sender.id }}"
