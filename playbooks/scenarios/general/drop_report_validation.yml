# Copyright (c) 2020 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
- name: Parse data from stdout
  set_fact:
    drop_stats: "{{ receive_out.stdout }}"

- name: Calculate string to hash
  set_fact:
    hashing_str: "{{ sender.mac }}|{{ item }}|{{ receiver.ip if ip_ver == '4' else '0.0.0.0' }}|{{ receiver.ipv6 | ipaddr if ip_ver == '6' else '::' }}"

- name: Calculate hash hex string from {{ hashing_str }}
  set_fact:
    hash_str: "{{ hashing_str | hash('sha256') }}"

- name: Get the first 16 bytes of {{ hash_str }}
  set_fact:
    hash_half_str: "{{ hash_str[:16] }}"

- name: Convert {{ hash_half_str }} into int
  set_fact:
    hash_val: "{{ hash_half_str | int(base=16) }}"

- name: Retrieve count from {{ drop_stats }} with key {{ hash_val }}
  set_fact:
    this_count: "{{ drop_stats[hash_val] | int }}"

- name: Fail when sent and received counts differ
  fail:
    msg: "{{ this_count }} != {{ send_packet_count }}"
  when: this_count | int != send_packet_count | int
