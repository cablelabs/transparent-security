# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Sending 25 packets within a second 1x through gateway 1
- import_playbook: test_cases/send_receive.yml
  vars:
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    send_hostname: Camera1
    rec_hostname: inet
    switch: "{{ topo_dict.switches.gateway1 }}"
    core_switch: "{{ topo_dict.switches.core1 }}"
    send_host: "{{ send_hostname if run_mode and run_mode == 'remote' else 'localhost' }}"
    rec_host: "{{ rec_hostname if run_mode and run_mode == 'remote' else 'localhost' }}"
    sender_intf: "{{ '%s-eth0' % send_hostname if run_mode and run_mode == 'remote' else '%s-eth1' % switch.name }}"
    receiver_intf: "{{ '%s-eth0' % rec_hostname if run_mode and run_mode == 'remote' else '%s-eth2' % core_switch.name }}"
    receiver: "{{ topo_dict.hosts.inet }}"
    receiver_log_filename: "udp-flood-receiver-{{ rec_host }}-1.out"
    sender_log_filename: "udp-flood-sender-{{ send_host }}-1.out"
    send_port: "{{ range(2000, 10000) | random(seed='one') }}"
    send_src_port: "{{ range(2000, 10000) | random(seed='two') }}"
    send_packet_count: 25

# Sending 50 packets within a second 1x through gateway 2
- import_playbook: test_cases/send_receive.yml
  vars:
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    send_hostname: Camera2
    rec_hostname: inet
    switch: "{{ topo_dict.switches.gateway2 }}"
    core_switch: "{{ topo_dict.switches.core1 }}"
    send_host: "{{ send_hostname if run_mode and run_mode == 'remote' else 'localhost' }}"
    rec_host: "{{ rec_hostname if run_mode and run_mode == 'remote' else 'localhost' }}"
    sender_intf: "{{ '%s-eth0' % send_hostname if run_mode and run_mode == 'remote' else '%s-eth1' % switch.name }}"
    receiver_intf: "{{ '%s-eth0' % rec_hostname if run_mode and run_mode == 'remote' else '%s-eth2' % core_switch.name }}"
    receiver: "{{ topo_dict.hosts.inet }}"
    receiver_log_filename: "udp-flood-receiver-{{ rec_host }}-2.out"
    sender_log_filename: "udp-flood-sender-{{ send_host }}-2.out"
    send_port: "{{ range(2000, 10000) | random(seed='two') }}"
    send_src_port: "{{ range(2000, 10000) | random(seed='three') }}"
    send_packet_count: 50

# Sending 150 packets within a second 2x through gateway 3.
# The second set should be dropped else this will fail
- import_playbook: test_cases/send_receive.yml
  vars:
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    send_hostname: Camera3
    rec_hostname: inet
    switch: "{{ topo_dict.switches.gateway3 }}"
    core_switch: "{{ topo_dict.switches.core1 }}"
    send_host: "{{ send_hostname if run_mode and run_mode == 'remote' else 'localhost' }}"
    rec_host: "{{ rec_hostname if run_mode and run_mode == 'remote' else 'localhost' }}"
    sender_intf: "{{ '%s-eth0' % send_hostname if run_mode and run_mode == 'remote' else '%s-eth1' % switch.name }}"
    receiver_intf: "{{ '%s-eth0' % rec_hostname if run_mode and run_mode == 'remote' else '%s-eth2' % core_switch.name }}"
    receiver: "{{ topo_dict.hosts.inet }}"
    receiver_log_filename: "udp-flood-receiver-{{ rec_host }}-3.out"
    sender_log_filename: "udp-flood-sender-{{ send_host }}-3.out"
    send_port: "{{ range(2000, 10000) | random(seed='four') }}"
    send_src_port: "{{ range(2000, 10000) | random(seed='five') }}"
    send_packet_count: 150
    min_received_packet_count: 99
    max_received_packet_count: 150
    send_loops: 2
    send_loop_delay: 30
