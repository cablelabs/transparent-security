# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Basic Data Inspection scenario for packets on clone port - sending INT packet with two hops expect to result in INT headers with 3 hops
- import_playbook: ../single_switch/data_inspection_basic.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch: "{{ topo_dict.switches.core }}"
    remote_send_host: host1
    remote_rec_host: clone
    send_host: "{{ remote_send_host }}"
    rec_host: "{{ remote_rec_host }}"
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    send_sw_port: "{{ topo_dict.links[0].south_facing_port }}"
    receiver: "{{ topo_dict.hosts.host2 }}"
    rec_sw_port: "{{ topo_dict.links[1].north_facing_port }}"
    dst_mac: "{{ receiver['mac'] }}"
    data_forward:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/dataForward"
      body:
        device_id: "{{ switch.id }}"
        switch_mac: "{{ switch.mac }}"
        dst_mac: "{{ receiver.mac }}"
        output_port: 2
      ok_status: 201
    data_inspection_table_action:
      control_name: TpsCoreIngress
      table_name: data_inspection_t
      action:
        name: data_inspect_packet
        match_fields:
          - key: hdr.udp_int.dst_port
            value: 555
        params:
          - key: switch_id
            value: "{{ switch.id }}"
    # For sending INT packets on the #1 of 3 send/receive iteration
    sr1_data_inspection_int:
      - switch_id: 1002
      - switch_id: 1001
        orig_mac: "{{ sender.mac }}"
    sr1_rec_int_hops: 3
    # For sending INT packets on the #2 of 3 send/receive iteration
    sr2_data_inspection_int: "{{ sr1_data_inspection_int }}"
    sr2_rec_int_hops: "{{ sr1_data_inspection_int|length }}"

# Basic Data Inspection scenario for packets on egress port - sending INT packet with two hops expect to result standard packet
- import_playbook: ../single_switch/data_inspection_basic.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch: "{{ topo_dict.switches.core }}"
    remote_send_host: host1
    remote_rec_host: host2
    send_host: "{{ remote_send_host }}"
    rec_host: "{{ remote_rec_host }}"
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    send_sw_port: "{{ topo_dict.links[0].south_facing_port }}"
    receiver: "{{ topo_dict.hosts[remote_rec_host] }}"
    rec_sw_port: "{{ topo_dict.links[1].north_facing_port }}"
    dst_mac: "{{ receiver['mac'] }}"
    data_forward:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/dataForward"
      body:
        device_id: "{{ switch.id }}"
        switch_mac: "{{ switch.mac }}"
        dst_mac: "{{ receiver.mac }}"
        output_port: 2
      ok_status: 201
    data_inspection_table_action:
      control_name: TpsCoreIngress
      table_name: data_inspection_t
      action:
        name: data_inspect_packet
        match_fields:
          - key: hdr.udp_int.dst_port
            value: 555
        params:
          - key: switch_id
            value: "{{ switch.id }}"
    # For sending INT packets on the #1 of 3 send/receive iteration
    sr1_data_inspection_int:
      - switch_id: 1002
      - switch_id: 1001
        orig_mac: "{{ sender.mac }}"
    sr1_rec_int_hops: 0
    # For sending INT packets on the #2 of 3 send/receive iteration
    sr2_data_inspection_int: "{{ sr1_data_inspection_int }}"
    sr2_rec_int_hops: "{{ sr1_rec_int_hops }}"
