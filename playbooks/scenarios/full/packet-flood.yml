# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Sending 150 packets within a second 2x through gateway 1.
# The second set should be dropped else this will fail
- import_playbook: ../test_cases/send_receive.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch_name: gateway1
    core_switch_name: core
    remote_send_host: Camera1
    remote_rec_host: inet
    switch: "{{ topo_dict.switches[switch_name] }}"
    send_host: "{{ remote_send_host }}"
    rec_host: "{{ remote_rec_host }}"
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    receiver: "{{ topo_dict.hosts[remote_rec_host] }}"
    switch_egress_intf: eth4
    dst_mac: "{{ sender['switch_mac'] }}"
    receiver_log_filename: "udp-flood-receiver-{{ rec_host }}-{{ send_protocol }}-1.out"
    sender_log_filename: "udp-flood-sender-{{ send_host }}-{{ send_protocol }}-1.out"
    send_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 1) }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 2) }}"
    send_packet_count: 150
    min_received_packet_count: 99
    max_received_packet_count: "{{ send_packet_count }}"
    send_loops: 2
    send_loop_delay: 5
    cleanup_rest_call:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/gwAttack"
      body:
        src_ip: "{% if scenario_send_ip_version|int == 4 %}{{ sender.ip }}{% else %}{{ sender.ipv6 }}{% endif %}"
        packet_size: 112
        attack_type: "UDP Flood"
        dst_port: "{{ send_port }}"
        dst_ip: "{% if scenario_send_ip_version|int == 4 %}{{ receiver.ip }}{% else %}{{ receiver.ipv6 }}{% endif %}"
        src_mac: "{{ sender.mac }}"
      ok_status: 201

# Sending 150 packets within a second 2x through gateway 2.
# The second set should be dropped else this will fail
- import_playbook: ../test_cases/send_receive.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch_name: gateway2
    core_switch_name: core
    remote_send_host: Camera2
    remote_rec_host: inet
    switch: "{{ topo_dict.switches[switch_name] }}"
    send_host: "{{ remote_send_host }}"
    rec_host: "{{ remote_rec_host }}"
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    receiver: "{{ topo_dict.hosts[remote_rec_host] }}"
    switch_egress_intf: eth3
    dst_mac: "{{ sender['switch_mac'] }}"
    receiver_log_filename: "udp-flood-receiver-{{ rec_host }}-{{ send_protocol }}-2.out"
    sender_log_filename: "udp-flood-sender-{{ send_host }}-{{ send_protocol }}-2.out"
    send_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 3) }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 4) }}"
    send_packet_count: 150
    min_received_packet_count: 99
    max_received_packet_count: "{{ send_packet_count }}"
    send_loops: 2
    send_loop_delay: 5
    cleanup_rest_call:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/gwAttack"
      body:
        src_ip: "{% if scenario_send_ip_version|int == 4 %}{{ sender.ip }}{% else %}{{ sender.ipv6 }}{% endif %}"
        packet_size: 112
        attack_type: "UDP Flood"
        dst_port: "{{ send_port }}"
        dst_ip: "{% if scenario_send_ip_version|int == 4 %}{{ receiver.ip }}{% else %}{{ receiver.ipv6 }}{% endif %}"
        src_mac: "{{ sender.mac }}"
      ok_status: 201

# Sending 150 packets within a second 2x through gateway 3.
# The second set should be dropped else this will fail
- import_playbook: ../test_cases/send_receive.yml
  vars:
    send_protocol: "{{ scenario_send_protocol | default('UDP') }}"
    ip_version: "{{ scenario_send_ip_version | default(4) }}"
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    switch_name: gateway3
    core_switch_name: core
    remote_send_host: Camera3
    remote_rec_host: inet
    switch: "{{ topo_dict.switches[switch_name] }}"
    send_host: "{{ remote_send_host }}"
    rec_host: "{{ remote_rec_host }}"
    sender: "{{ topo_dict.hosts[remote_send_host] }}"
    receiver: "{{ topo_dict.hosts[remote_rec_host] }}"
    switch_egress_intf: eth3
    dst_mac: "{{ sender['switch_mac'] }}"
    receiver_log_filename: "udp-flood-receiver-{{ rec_host }}-{{ send_protocol }}-3.out"
    sender_log_filename: "udp-flood-sender-{{ send_host }}-{{ send_protocol }}-3.out"
    send_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 5) }}"
    send_src_port: "{{ '%s' % range(2000, 10000) | random(seed=now|int + 6) }}"
    send_packet_count: 150
    min_received_packet_count: 99
    max_received_packet_count: "{{ send_packet_count }}"
    send_loops: 2
    send_loop_delay: 5
    cleanup_rest_call:
      url: "http://{{ sdn_ip }}:{{ sdn_port }}/gwAttack"
      body:
        src_ip: "{% if scenario_send_ip_version|int == 4 %}{{ sender.ip }}{% else %}{{ sender.ipv6 }}{% endif %}"
        packet_size: 112
        attack_type: "UDP Flood"
        dst_port: "{{ send_port }}"
        dst_ip: "{% if scenario_send_ip_version|int == 4 %}{{ receiver.ip }}{% else %}{{ receiver.ipv6 }}{% endif %}"
        src_mac: "{{ sender.mac }}"
      ok_status: 201
