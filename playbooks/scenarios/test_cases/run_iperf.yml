# Copyright (c) 2020 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Simple scenario where packets are sent through 3 devices and only the last
# one will be demonstrating dropped packets
---
# Start iperf server
- hosts: "{{ iperf_server }}"
  gather_facts: no
  vars:
    receive_timeout: "{{ iperf3_receive_timeout | default(60) }}"
  tasks:
    - name: Start iperf server
      command: "iperf3 -s"
      register: cmd_out
      changed_when: cmd_out is not failed
      async: "{{ receive_timeout }}"
      poll: 0

# Start iperf client
- hosts: "{{ iperf_client }}"
  gather_facts: no
  vars:
    receive_timeout: "{{ iperf3_receive_timeout | default(60) }}"
  tasks:
    - name: Run when IPv4 address is defined
      block:
        - name: Checking speed with iperf3 against {{ iperf_server_ip | ansible.netcommon.ipaddr }}
          command: "iperf3 -c {{ iperf_server_ip }}"
          register: cmd_out
          changed_when: cmd_out is not failed
          async: "{{ receive_timeout }}"

        - name: Iperf results
          debug:
            var: cmd_out
      when: iperf_server_ip is defined

## Start iperf client
#- hosts: "{{ iperf_client }}"
#  gather_facts: no
#  vars:
#    receive_timeout: "{{ iperf3_receive_timeout | default(60) }}"
#  tasks:
#    - name: Run when IPv6 address is defined
#      block:
#      - name: Checking speed with iperf3 against {{ iperf_server_ipv6 | ansible.netcommon.ipaddr }}
#        command: "iperf3 -c {{ iperf_server_ipv6 | ansible.netcommon.ipaddr }}"
#        register: cmd_out
#        changed_when: cmd_out is not failed
#        async: "{{ receive_timeout }}"
#
#      - name: Iperf results
#        debug:
#          var: cmd_out
#      when: iperf_server_ipv6 is defined
