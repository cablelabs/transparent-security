/*
 * Copyright (c) 2021 Cable Television Laboratories, Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@app:name('Kafka-Source-Drop-JSON')
@source(type='kafka', topic.list='{{ kafka_trpt_drop_topic }}', bootstrap.servers='{{ kafka_host_port }}',
    group.id='test',
    threading.option='single.thread',
    @map(type='p4-trpt',
        @attributes(timestamp='dropHdr.timestamp', dropKey='dropHdr.dropKey',
            dropCount='dropHdr.dropCount')))
define stream trptDropStream (timestamp long, dropKey string, dropCount long);

@sink(type='http', publisher.url='http://{{ sdn_ip }}:{{ sdn_port }}/aggAttack', method='DELETE',
    headers='trp:headers', @map(type='json'))
define stream dropAttackStream (dropKey string, dropCount long, averageDropCount long);

@info(name = 'trptJsonQuery')
from trptDropStream#window.length(3)
select dropKey, dropCount, count(dropCount) / 3 as averageDropCount
having averageDropCount > 25
-- TODO - Fix this query to work when the last three events have the same count value
-- having averageDropCount == dropCount and dropCount != 0
insert into dropAttackStream;
