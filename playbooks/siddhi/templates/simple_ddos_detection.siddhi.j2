/*
 * Copyright (c) 2021 Cable Television Laboratories, Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@app:name('Kafka-Source-JSON')
@source(type='kafka', topic.list='{{ kafka_topic }}', bootstrap.servers='{{ kafka_host_port }}',
    group.id='test',
    threading.option='single.thread',
    @map(type='p4-trpt-json',
        @attributes(origMac='intHdr.mdStackHdr.origMac', ipVer='ipHdr.version',
            dstAddr='ipHdr.dstAddr', dstPort='dstPort')))
define stream trptJsonStream (origMac string, ipVer int, dstAddr string, dstPort long);

@sink(type='http', publisher.url='http://{{ sdn_ip }}:{{ sdn_port }}/aggAttack', method='POST',
    headers='trp:headers', @map(type='json'))
define stream attackStream (origMac string, ipVer int, dstAddr string, dstPort long, count long);

@info(name = 'trptJsonQuery')
from trptJsonStream#window.time({{ alert_window_secs | default(1) }} sec)
select origMac, ipVer, dstAddr, dstPort, count(ipVer) as count
group by origMac, dstAddr, dstPort
having count == {{ alert_pkt_count | default(100) }}
insert into attackStream;
