/*
 * Copyright (c) 2021 Cable Television Laboratories, Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@app:name('Kafka-Source-Packet-JSON')
@source(type='kafka', topic.list='{{ kafka_trpt_pkt_topic }}', bootstrap.servers='{{ kafka_host_port }}',
    group.id='test',
    threading.option='single.thread',
    @map(type='p4-trpt',
        @attributes(src_mac='intHdr.mdStackHdr.origMac', ipVer='ipHdr.version',
            dst_ip='ipHdr.dstAddr', dst_port='protoHdr.dstPort')))
define stream trptPktStream (src_mac string, ipVer int, dst_ip string, dst_port long);

@sink(type='http', publisher.url='http://{{ sdn_ip }}:{{ sdn_port }}/aggAttack', method='POST',
    headers='trp:headers', @map(type='json'))
define stream attackStream (src_mac string, ipVer int, dst_ip string, dst_port long, count long);

@info(name = 'trptJsonQuery')
from trptPktStream#window.time({{ alert_window_secs | default(1) }} sec)
select src_mac, ipVer, dst_ip, dst_port, count(ipVer) as count
group by src_mac, dst_ip, dst_port
having count == {{ alert_pkt_count | default(100) }}
insert into attackStream;
