# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- import_playbook: ../general/setup_source.yml
  vars:
    host_val:
      - hosts
    trans_sec_source_dir: "{{ orch_trans_sec_dir }}"
    python_unit_tests: false

# Create virtual interfaces on switches
- import_playbook: setup_virt_eth.yml
  vars:
    host_val: switches
    remote_sde_dir: "{{ sde_dir }}"

# Setup GRE Tunnels
- import_playbook: tunnel/setup_gre_tunnels.yml

# TODO/FIXME - Call setup_tofino_switch playbook so it can run in parallel

# Start tofino-model and tofino-switchd on the core switch
- import_playbook: setup_tofino_switch.yml
  vars:
    switches:
      - core
    host_val: core
    p4_prog: core.p4
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    tunnels: "{{ topo_dict.switches['core'].tunnels }}"
    load_tofino_p4rt: False

# Start tofino-model and tofino-switchd on the aggregate switch
- import_playbook: setup_tofino_switch.yml
  vars:
    switches:
      - aggregate
    host_val: aggregate
    p4_prog: aggregate.p4
    topo_dict: "{{ lookup('file','{{ topo_file_loc }}') | from_yaml }}"
    tunnels: "{{ topo_dict.switches['aggregate'].tunnels }}"

# Start tofino-model and tofino-switchd on gateway1
- import_playbook: setup_tofino_switch.yml
  vars:
    switches:
      - gateway1
      - gateway2
      - gateway3
    p4_prog: gateway.p4

# Start SDN Controller
- import_playbook: ../general/start_service.yml
  vars:
    host_val: controller
    service_name: tps-tofino-sdn
    scenario_name: full
    local_srvc_script_tmplt_file: "{{ orch_trans_sec_dir }}/playbooks/general/templates/sdn_controller.sh.j2"
    port_to_wait: "{{ sdn_port }}"
    wait_timeout: 30
    load_p4: False

# Start AE
- import_playbook: ../general/start_service.yml
  vars:
    host_val: ae
    service_name: tps-tofino-ae
    local_srvc_script_tmplt_file: "{{ orch_trans_sec_dir }}/playbooks/general/templates/ae_service.sh.j2"
    srvc_type: SIMPLE
    sdn_url: "http://{{ sdn_ip }}:{{ sdn_port }}"
    monitor_intf: "{{ ae_monitor_intf }}"
